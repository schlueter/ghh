#!/usr/bin/env python

"""ghh, a hook handler for GitHub"""

import argparse
import sys

import bjoern

from ghh.errors import ServerError
from ghh.app import WSGIApp


def parse_args():
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('host_or_socket',
                        type=str,
                        help='A hostname or socket to listen on.')
    parser.add_argument('-p', '--port',
                        type=int,
                        help='A port to listen on.')
    parser.add_argument('-r', '--reuse-port',
                        action='store_true',
                        help='Enables SO_REUSEPORT if available.')
    parser.add_argument('-c', '--config-file',
                        type=argparse.FileType('r'),
                        default='etc/ghh/config.yml',
                        help='A port to listen on.')
    return parser.parse_args()


def main(args):
    try:
        app = WSGIApp(args.config_file)
        bjoern.run(app, args.host_or_socket, args.port, reuse_port=args.reuse_port)
    except KeyboardInterrupt:
        print('\rExit requested', file=sys.stderr)
        exit()


if __name__ == '__main__':
    main(parse_args())
